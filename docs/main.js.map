{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/guards/AuthGuard/auth-guard.guard.ts","webpack:///./src/app/guards/Login/login.guard.ts","webpack:///./src/app/services/login-service/login-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { AuthGuardGuard } from './guards/AuthGuard/auth-guard.guard';\nimport { LoginGuard } from './guards/Login/login.guard';\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: '/login', pathMatch: 'full', canActivate: [LoginGuard] },\n  { path: \"login\", component: LoginComponent, canActivate: [LoginGuard] },\n  { path: \"home\", component: HomeComponent, canActivate: [AuthGuardGuard] },\n  { path: \"register\", component: RegisterComponent, canActivate: [LoginGuard] },\n  { path: \"**\", redirectTo: '/login', pathMatch: 'full', canActivate: [LoginGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginServiceService } from './services/login-service/login-service.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [LoginServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-sm navbar-dark bg-dark\\\" style=\\\"z-index: 99999;\\\">\\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/login']\\\">NarenAuth v0.0</a>\\n  <button class=\\\"navbar-toggler d-lg-none\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapsibleNavId\\\"\\n    aria-controls=\\\"collapsibleNavId\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\" (click)=\\\"toggleMenuBar()\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"collapsibleNavId\\\">\\n    <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\n      <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"!isLoggedIn\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"!isLoggedIn\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\n      </li>\\n    </ul>\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"isLoggedIn\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoginServiceService } from 'src/app/services/login-service/login-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  isLoggedIn: boolean = false\n  constructor(private _loginService: LoginServiceService, private _router: Router) {\n    this._loginService.authSub.subscribe((data) => {\n      this.isLoggedIn = data\n    })\n  }\n\n  ngOnInit() {\n    this.isLoggedIn = this._loginService.getAuthStatus()\n  }\n\n  toggleMenuBar() {\n    if(document.getElementById(\"collapsibleNavId\").style.display == \"block\") {\n      document.getElementById(\"collapsibleNavId\").style.display = \"none\";\n    } else {\n      document.getElementById(\"collapsibleNavId\").style.display = \"block\";\n    }\n  }\n\n  logout() {\n    this._loginService.logoutUser()\n    this._router.navigate(['/login'])\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"card card-container\\\">\\n    <div *ngIf=\\\"this.tfa.secret\\\">\\n\\n      <h5 style=\\\"border-bottom: 1px solid #a8a8a8; padding-bottom: 5px;\\\">Current Settings</h5>\\n\\n      <img [src]=\\\"tfa.dataURL\\\" alt=\\\"\\\" class=\\\"img-thumbnail\\\" style=\\\"display:block;margin:auto\\\">\\n\\n      <p>Secret Key - {{tfa.secret || tfa.tempSecret}}</p>\\n\\n      <p>Auth Type - Time Based - OTP</p>\\n\\n      <button class=\\\"btn btn-lg btn-danger btn-block btn-signin\\\" (click)=\\\"disabledTfa()\\\">Disable TFA</button>\\n    </div>\\n    <div *ngIf=\\\"!tfa.secret\\\">\\n\\n      <h5 style=\\\"border-bottom: 1px solid #a8a8a8; padding-bottom: 5px;\\\">Setup TFA</h5>\\n\\n      <span *ngIf=\\\"!!tfa.tempSecret\\\">\\n\\n        <p>Scan the QR code or enter the secret key in Google Authenticator</p>\\n\\n        <img [src]=\\\"tfa.dataURL\\\" alt=\\\"\\\" class=\\\"img-thumbnail\\\" style=\\\"display:block;margin:auto\\\">\\n\\n        <p>Secret Key - {{tfa.tempSecret}}</p>\\n\\n        <p>Auth Type - Time Based - OTP</p>\\n\\n        <form class=\\\"form-group\\\" (ngSubmit)=\\\"confirm()\\\" #otpForm=\\\"ngForm\\\">\\n          <input name=\\\"authcode\\\" type=\\\"number\\\" #iauthcode=\\\"ngModel\\\" class=\\\"form-control\\\" maxlength=\\\"6\\\"\\n            placeholder=\\\"Enter the Auth Code\\\" id=\\\"authcode\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"authcode\\\" required>\\n          <br>\\n          <button type=\\\"Submit\\\" class=\\\"btn btn-lg btn-primary btn-block btn-signin\\\"\\n            [disabled]=\\\"iauthcode?.errors?.required\\\">Enable TFA</button>\\n        </form>\\n        <p class=\\\"text-danger\\\" style=\\\"text-align:center;\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</p>\\n      </span>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoginServiceService } from 'src/app/services/login-service/login-service.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  tfa: any = {};\n  authcode: string = \"\";\n  errorMessage: string = null;\n\n  constructor(private _loginService: LoginServiceService) {\n    this.getAuthDetails();\n  }\n\n  ngOnInit() {\n  }\n\n  getAuthDetails() {\n    this._loginService.getAuth().subscribe((data) => {\n      const result = data.body\n      if (data['status'] === 200) {\n        console.log(result);\n        if (result == null) {\n          this.setup();\n        } else {\n          this.tfa = result;\n        }\n      }\n    });\n  }\n\n  setup() {\n    this._loginService.setupAuth().subscribe((data) => {\n      const result = data.body\n      if (data['status'] === 200) {\n        console.log(result);\n        this.tfa = result;\n      }\n    });\n  }\n\n  confirm() {\n    this._loginService.verifyAuth(this.authcode).subscribe((data) => {\n      const result = data.body\n      if (result['status'] === 200) {\n        console.log(result);\n        this.errorMessage = null;\n        this.tfa.secret = this.tfa.tempSecret;\n        this.tfa.tempSecret = \"\";\n      } else {\n        this.errorMessage = result['message'];\n      }\n    });\n  }\n\n  disabledTfa() {\n    this._loginService.deleteAuth().subscribe((data) => {\n      const result = data.body\n      if (data['status'] === 200) {\n        console.log(result);\n        this.authcode = \"\";\n        this.getAuthDetails();\n      }\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"card card-container\\\">\\n    <img id=\\\"profile-img\\\" class=\\\"profile-img-card\\\" src=\\\"assets/images/avatar_2x.png\\\" />\\n    <form class=\\\"form-signin\\\" (ngSubmit)=\\\"loginUser()\\\" #loginForm=\\\"ngForm\\\">\\n      <input type=\\\"text\\\" id=\\\"uname\\\" class=\\\"form-control\\\" name=\\\"uname\\\" autocomplete=\\\"off\\\" #uname=\\\"ngModel\\\"\\n        [(ngModel)]=\\\"userObject.uname\\\" placeholder=\\\"Username\\\" title=\\\"Please enter the username\\\" required autofocus>\\n      <input type=\\\"password\\\" id=\\\"upass\\\" class=\\\"form-control\\\" name=\\\"upass\\\" autocomplete=\\\"off\\\" #upass=\\\"ngModel\\\"\\n        [(ngModel)]=\\\"userObject.upass\\\" placeholder=\\\"Password\\\" title=\\\"Please enter the password\\\" required>\\n      <input type=\\\"text\\\" id=\\\"authcode\\\" class=\\\"form-control\\\" *ngIf=\\\"this.tfaFlag\\\" name=\\\"authcode\\\" autocomplete=\\\"off\\\"\\n        #authcode=\\\"ngModel\\\" [(ngModel)]=\\\"userObject.authcode\\\" placeholder=\\\"Two-Factor Auth code\\\"\\n        title=\\\"Please enter the code\\\" required>\\n      <button class=\\\"btn btn-lg btn-primary btn-block btn-signin\\\" type=\\\"submit\\\"\\n        [disabled]=\\\"uname?.errors?.required || upass?.errors?.required || (this.tfaFlag && authcode?.errors?.required)\\\">Sign\\n        in</button>\\n      <p style=\\\"text-align:center;\\\">Want to reset login? <a [routerLink]=\\\"['/register']\\\">Register\\n          here</a></p>\\n      <p class=\\\"text-danger\\\" style=\\\"text-align:center;\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</p>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router'\nimport { LoginServiceService } from 'src/app/services/login-service/login-service.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  tfaFlag: boolean = false\n  userObject = {\n    uname: \"\",\n    upass: \"\"\n  }\n  errorMessage: string = null\n  constructor(private _loginService: LoginServiceService, private _router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  loginUser() {\n    this._loginService.loginAuth(this.userObject).subscribe((data) => {\n      this.errorMessage = null;\n      if (data.body['status'] === 200) {\n        this._loginService.updateAuthStatus(true);\n        this._router.navigateByUrl('/home');\n      }\n      if (data.body['status'] === 206) {\n        this.tfaFlag = true;\n      }\n      if (data.body['status'] === 403) {\n        this.errorMessage = data.body['message'];\n      }\n      if (data.body['status'] === 404) {\n        this.errorMessage = data.body['message'];\n      }\n    })\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"card card-container\\\">\\n    <img id=\\\"profile-img\\\" class=\\\"profile-img-card\\\" src=\\\"assets/images/avatar_2x.png\\\" />\\n    <form class=\\\"form-signin\\\" (ngSubmit)=\\\"registerUser()\\\" #registerForm=\\\"ngForm\\\">\\n      <input type=\\\"text\\\" id=\\\"uname\\\" class=\\\"form-control\\\" name=\\\"uname\\\" #uname=\\\"ngModel\\\" [(ngModel)]=\\\"userObject.uname\\\"\\n        placeholder=\\\"Username\\\" title=\\\"Please enter the username\\\" autocomplete=\\\"off\\\" required autofocus>\\n      <input type=\\\"password\\\" id=\\\"upass\\\" class=\\\"form-control\\\" name=\\\"upass\\\" placeholder=\\\"Password\\\"\\n        title=\\\"Please enter the password\\\" #upass=\\\"ngModel\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"userObject.upass\\\" required>\\n      <input type=\\\"password\\\" id=\\\"confirmpass\\\" class=\\\"form-control\\\" name=\\\"confirmpass\\\" placeholder=\\\"Confirm password\\\"\\n        title=\\\"Please re-enter the password\\\" #uconfirmpass=\\\"ngModel\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"confirmPass\\\"\\n        required>\\n      <button class=\\\"btn btn-lg btn-primary btn-block btn-signin\\\" type=\\\"submit\\\"\\n        [disabled]=\\\"(uname?.errors?.required || upass?.errors?.required || uconfirmpass?.errors?.required) || (upass.value !== uconfirmpass.value)\\\">Sign\\n        up</button>\\n        <p style=\\\"text-align:center;\\\">Remember credentials? <a [routerLink]=\\\"['/login']\\\">Login\\n          here</a></p>\\n      <p class=\\\"text-success\\\" style=\\\"text-align:center;\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</p>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoginServiceService } from 'src/app/services/login-service/login-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  errorMessage: string = null\n\n  userObject = {\n    uname: \"\",\n    upass: \"\"\n  }\n\n  confirmPass: string = \"\"\n\n  constructor(private _loginService: LoginServiceService, private _router: Router) { }\n\n  ngOnInit() {\n  }\n\n  registerUser() {\n    if (this.userObject.uname.trim() !== \"\" && this.userObject.upass.trim() !== \"\" && (this.userObject.upass.trim() === this.confirmPass))\n      this._loginService.registerUser(this.userObject).subscribe((data) => {\n        const result = data.body\n        if (result['status'] === 200) {\n          this.errorMessage = result['message'];\n          setTimeout(() => {\n            this._router.navigate(['/login']);\n          }, 2000);\n        }\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { LoginServiceService } from 'src/app/services/login-service/login-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardGuard implements CanActivate {\n\n  constructor(private _loginService: LoginServiceService, private _router: Router) {\n  }\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this._loginService.getAuthStatus()) {\n      return true;\n    }\n\n    this._router.navigate(['/login'])\n\n    return false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { LoginServiceService } from 'src/app/services/login-service/login-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n  constructor(private _loginService: LoginServiceService, private _router: Router) {\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot) {\n    if (!this._loginService.getAuthStatus()) {\n      return true;\n    }\n\n    this._router.navigate(['/home'])\n    return false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginServiceService {\n  headerOptions: any = null\n\n  _isLoggedIn: boolean = false\n\n  authSub = new Subject<any>();\n\n  constructor(private _http: HttpClient) {\n  }\n\n  loginAuth(userObj: any) {\n    if (userObj.authcode) {\n      console.log('Appending headers');\n      this.headerOptions = new HttpHeaders({\n        'x-tfa': userObj.authcode\n      });\n    }\n    return this._http.post(\"http://localhost:3000/login\", { uname: userObj.uname, upass: userObj.upass }, { observe: 'response', headers: this.headerOptions });\n  }\n\n  setupAuth() {\n    return this._http.post(\"http://localhost:3000/tfa/setup\", {}, { observe: 'response' })\n  }\n\n  registerUser(userObj: any) {\n    return this._http.post(\"http://localhost:3000/register\", { uname: userObj.uname, upass: userObj.upass }, { observe: \"response\" });\n  }\n\n  updateAuthStatus(value: boolean) {\n    this._isLoggedIn = value\n    this.authSub.next(this._isLoggedIn);\n    localStorage.setItem('isLoggedIn', value ? \"true\" : \"false\");\n  }\n\n  getAuthStatus() {\n    this._isLoggedIn = localStorage.getItem('isLoggedIn') == \"true\" ? true : false;\n    return this._isLoggedIn\n  }\n\n  logoutUser() {\n    this._isLoggedIn = false;\n    this.authSub.next(this._isLoggedIn);\n    localStorage.setItem('isLoggedIn', \"false\")\n  }\n\n  getAuth() {\n    return this._http.get(\"http://localhost:3000/tfa/setup\", { observe: 'response' });\n  }\n\n  deleteAuth() {\n    return this._http.delete(\"http://localhost:3000/tfa/setup\", { observe: 'response' });\n  }\n\n  verifyAuth(token: any) {\n    return this._http.post(\"http://localhost:3000/tfa/verify\", { token }, { observe: 'response' });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}